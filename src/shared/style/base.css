@import '~/shared/style/common.css';

/* Defaults for a bunch of things */
@layer base {
	body {
		background: linear-gradient(102deg, hsl(0deg 0% 100% / 0%), rgb(255 204 0 / 5%)),
			linear-gradient(12deg, rgb(33 37 41 / 5%), hsl(0deg 0% 100% / 0%)), var(--v-bg);
		min-height: 100vh;
	}

	* {
		/*
			The input-box object assumes some sort of border for spacing. We don't want
			to automatically put a visible border on things without explicit indication
			though, so just make everything transparent for now.
		*/
		border-color: transparent;
	}

	a[href] {
		@mixin t-link-style;
	}

	b,
	strong {
		font-weight: var(--v-font-weight-semibold);
	}

	/*
		Truncate overflow on pretty much all text and inline elements by default.
		It's pretty annoying otherwise because every child needs the
		overflow set for the ellipsis treatment to work properly.
	*/
	a,
	aside,
	b,
	blockquote,
	em,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	p,
	span,
	strong {
		@mixin t-text;
	}

	/* Button-like things */
	button,
	input[type='button'],
	input[type='submit'],
	input[type='reset'] {
		&:not(.t-unstyled) {
			@mixin o-input-box;
			@mixin t-text;
			@mixin t-transition single-arg(color, background-color, border-color, box-shadow);

			cursor: pointer;
			display: inline-flex;
			align-items: flex-start;
			justify-content: center;
			gap: var(--v-inline-gap);

			.lucide + * {
				text-align: left;
			}

			&:hover {
				@mixin t-hover;
			}

			&:disabled,
			&[aria-disabled='true'] {
				@mixin t-disabled-button;
			}

			&:focus-visible {
				@mixin t-focus-ring;
			}
		}
	}

	/* Input-like things */
	input:not([type='button'], [type='submit'], [type='reset'], [type='range']),
	textarea,
	select,
	[role='combobox'],
	[role='listbox'] {
		&:not(.t-unstyled) {
			/*
				A bit more style than buttons because we usually hide inputs we don't want styled
				and use them for screenreader-only sort of things. Note that the combination of
				input colors + input box will automatically add a border because there's a default
				border style set for all elements in the reset.
			*/
			@mixin v-input-colors;
			@mixin o-input-box;
			@mixin t-inner-radius;
			@mixin t-text;
			@mixin t-transition-color;

			box-shadow: var(--v-shadow-inner);

			&:disabled,
			&[aria-disabled='true'] {
				@mixin t-disabled-input;
			}

			&[aria-invalid='true'] {
				@mixin t-error;
			}

			&:focus {
				@mixin t-focus-ring;
			}

			&::placeholder {
				color: var(--v-muted);
			}
		}
	}

	/* Icons defaults */
	.lucide {
		height: 1lh;
		width: 1em;
		flex-shrink: 0;
	}
}
