@import '~/shared/style/helpers.css';

@layer base {
	/* No scroll when dropdown open */
	body:has(.c-dropdown__content:popover-open) {
		overflow: hidden;
	}

	/* Dropdown backdrop -- use this instead of ::backdrop because this blocks click-through */
	body:has(.c-dropdown__content:popover-open)::after,
	:modal:has(.c-dropdown__content:popover-open)::after {
		content: ' ';

		@apply fixed inset-0 z-backdrop block bg-backdrop backdrop-blur-sm;
	}

	/* Make backdrop transparent on larger screens */
	@media screen(sm) {
		body:has(.c-dropdown__content:popover-open)::after,
		:modal:has(.c-dropdown__content:popover-open)::after {
			@apply bg-transparent backdrop-blur-none;
		}
	}
}

@layer components {
	.c-dropdown__content:popover-open {
		@apply flex;
	}

	.c-dropdown__content {
		@apply fixed mx-auto my-0 flex-col overflow-hidden rounded-md border-0 bg-popover px-0 py-xs text-popover-fg;
		@apply z-above-backdrop min-w-dropdown;

		/* Mobile specific styling */
		@apply inset-md w-full;

		max-height: calc(100vh - 2 * theme(spacing.md));
		max-width: calc(100vw - 2 * theme(spacing.md));

		/*
			Border looks weird with highlighting but is necessary to distinguish card from
			identically colored background, so use this "shadow border"
		*/
		box-shadow: theme('boxShadow.lg'), theme('boxShadow.innerBorder');
	}

	.c-dropdown__children {
		@apply flex-grow overflow-y-auto;
	}

	.c-dropdown__footer {
		@apply mt-xs flex flex-none justify-end border-t-sm px-input-x-md pb-0 pt-xs align-middle text-input-sm border-dynamic-card;
	}

	/* Dynamically positioning dropdowns on smaller screens */
	@media screen(sm) {
		.c-dropdown__content {
			inset: unset;
			width: auto;

			/* These are set via `dropdown.tsx` */
			left: var(--c-dropdown-left);
			top: var(--c-dropdown-top);
			max-height: var(--c-dropdown-max-height);
			max-width: var(--c-dropdown-max-width);
			min-width: var(--c-dropdown-min-width, 180px);
		}

		.c-dropdown__footer {
			@apply hidden;
		}
	}
}
