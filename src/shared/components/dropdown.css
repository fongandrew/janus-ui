@import '~/shared/style/helpers.css';

@layer base {
	/* No scroll when dropdown open */
	body:has(.c-dropdown:popover-open) {
		overflow: hidden;
	}

	/* Dropdown backdrop -- use this instead of ::backdrop because this blocks click-through */
	body:has(.c-dropdown:popover-open)::after,
	:modal:has(.c-dropdown:popover-open)::after {
		content: ' ';

		@apply z-backdrop fixed inset-0 block bg-backdrop backdrop-blur-sm;
	}

	/* Make backdrop transparent on larger screens */
	@media screen(sm) {
		body:has(.c-dropdown:popover-open)::after,
		:modal:has(.c-dropdown:popover-open)::after {
			@apply bg-transparent backdrop-blur-none;
		}
	}
}

@layer components {
	.c-dropdown {
		@apply fixed mx-auto my-0 overflow-y-auto rounded-md border-md bg-popover px-0 py-xs text-popover-fg shadow-lg border-dynamic-card;
		@apply z-above-backdrop min-w-[180px];

		/* Mobile specific styling */
		@apply inset-md w-full;

		max-height: calc(100vh - 2 * theme(spacing.md));
		max-width: calc(100vw - 2 * theme(spacing.md));
	}

	/* Dynamically positioning dropdowns on smaller screens */
	@media screen(sm) {
		.c-dropdown {
			inset: unset;
			width: auto;

			/* These are set via `create-dropdown.ts` */
			left: var(--c-dropdown-left);
			top: var(--c-dropdown-top);
			max-height: var(--c-dropdown-max-height);
			max-width: var(--c-dropdown-max-width);
			min-width: var(--c-dropdown-min-width, 180px);
		}
	}
}
