@import '~/shared/styles/common.css';

@layer variables {
	:root {
		--v-sidebar-width: 16rem;
	}
}

@layer composite {
	/*
		We can do this without wrapping all content in the layout on mobile but it makes it
		harder to understand scroll state and whatnot, so assume with a sidebay layout
		everything is inside a container.
	*/
	.c-sidebar-layout {
		display: flex;
		height: 100vh;
		width: 100vw;
		overflow: hidden;

		/* This is needed to keep absolute positioned children from doing dumb things */
		position: relative;
	}

	.c-sidebar-layout__content {
		flex: 1 1 0;
		overflow: auto;
		container-type: inline-size;
	}

	/* Default closed on mobile */
	.c-sidebar {
		@mixin v-colors-card;
		@mixin t-border-right;

		display: none;
		overflow: auto;
		box-shadow: var(--v-shadow-md);
		flex-direction: column;
		container-type: inline-size;
	}

	.c-sidebar[data-sidebar__state='open'] {
		position: fixed;
		bottom: 0;
		left: 0;
		top: 0;
		z-index: var(--v-z-above-backdrop);
		display: flex;
		width: 90vw;
		max-width: var(--v-sidebar-width);
	}

	.c-sidebar__overlay {
		position: fixed;
		inset: 0;
		z-index: var(--v-z-backdrop);
		display: none;
		background-color: var(--v-backdrop);
	}

	.c-sidebar-layout:has(.c-sidebar[data-sidebar__state='open']) .c-sidebar__overlay {
		display: block;
	}

	.c-sidebar__header,
	.c-sidebar__footer {
		@mixin o-text-box;

		flex: 0 0 auto;
		display: flex;
		align-items: center;
		gap: var(--v-inline-gap);

		&:has(button, input) {
			@mixin o-input-container-box;

			padding-left: var(--v-spacing);
		}
	}

	.c-sidebar__header {
		@mixin t-border-bottom;

		> * {
			flex: 0 0 auto;
		}

		> h1,
		> h2,
		> h3 {
			flex: 1 1 auto;
			overflow-x: hidden;
			text-overflow: ellipsis;
		}
	}

	.c-sidebar__footer {
		@mixin t-border-top;
	}

	.c-sidebar__content {
		flex: 1 1 auto;
		overflow-y: auto;
	}

	.c-sidebar__list {
		@mixin o-input-container-box;

		> ul {
			list-style: none;
			padding: 0;
		}
	}

	.c-sidebar__list-item {
		padding: 0;
		text-align: left;
	}

	.c-sidebar__list-link,
	.c-sidebar__list-button {
		@mixin o-input-box;
		@mixin t-font-weight var(--v-font-weight-normal);

		text-align: left;
		justify-content: flex-start;
		width: 100%;

		/* Selected */
		&[aria-current]:not([aria-current='false']) {
			@mixin t-font-weight var(--v-font-weight-selected);
		}
	}

	.c-sidebar-list__heading {
		@mixin o-input-box;
		@mixin v-text-sm;
		@mixin t-font-weight var(--v-font-weight-label);

		border-color: transparent;
		border-width: var(--v-border-width);

		@mixin t-text-muted;

		+ .c-sidebar__list {
			padding-top: 0;
		}
	}

	@mixin v-breakpoint-tablet-wide {
		/* Default open on desktop */
		.c-sidebar,
		[data-sidebar__state='open'] .c-sidebar {
			position: relative;
			flex-shrink: 0;
			display: flex;
			width: var(--v-sidebar-width);
		}

		.c-sidebar__overlay,
		.c-sidebar-layout:has(.c-sidebar[data-sidebar__state='open']) .c-sidebar__overlay {
			display: none;
		}

		/* Can be explicitly closed on desktop */
		.c-sidebar[data-sidebar__state='closed'] {
			display: none;
		}

		/*
			Open button is conditionally visible on desktop. Not really relevant on
			mobile or for close button since those get automatically shown / hidden
			based on sidebar visibility.
		*/
		.c-sidebar__open-button {
			display: none;
		}

		.c-sidebar-layout:has(.c-sidebar[data-sidebar__state='closed']) .c-sidebar__open-button {
			display: inline-flex;
		}
	}
}
