@import '~/shared/styles/common.css';

@layer components {
	.c-toggle-switch {
		@mixin v-input-sm;
		@mixin v-colors-input;
		@mixin t-border;
		@mixin t-input-wrapper-states;

		position: relative;
		display: inline-flex;
		height: var(--v-input-height);
		width: calc(var(--v-input-height) * 1.75);
		cursor: pointer;
		align-items: center;
		border-radius: 9999em;
		box-shadow: var(--v-shadow-inner);
		flex-shrink: 0;

		.c-label:has(&) {
			align-items: center;
		}

		&:has(input:checked) {
			background-color: var(--v-primary-bg);
		}

		.c-label > &:last-child {
			margin-left: auto;
		}
	}

	.c-toggle-switch input {
		@mixin t-sr-only;
	}

	.c-toggle-switch__thumb {
		@mixin v-colors-tooltip;

		position: absolute;
		margin-inline: calc(0.5 * var(--v-space-sm) - var(--v-border-width));
		height: calc(var(--v-input-height) - var(--v-space-sm));
		width: calc(var(--v-input-height) - var(--v-space-sm));
		border-radius: 9999em;
		color: color-mix(in hsl, var(--v-fg), transparent);
		display: flex;
		align-items: center;
		justify-content: center;

		@mixin t-transition transform;
	}

	.c-toggle-switch:has(input:checked) .c-toggle-switch__thumb {
		transform: translateX(calc(0.75 * var(--v-input-height)));
		background-color: var(--v-primary-fg);
		color: var(--v-primary-bg);
	}

	.c-toggle-switch:has([aria-invalid='true']) {
		@mixin t-error;
	}

	.c-toggle-switch:has([aria-disabled='true']) {
		@mixin t-disabled-input;
	}
}
