@import '~/shared/style/tokens.css';
@import '~/shared/style/mixins.css';

@layer components {
	.c-select__button,
	.c-select__input,
	.c-select__input_description {
		min-height: var(--input-height-md);
		width: 100%;
		overflow-x: hidden;
		text-overflow: ellipsis;
		border-radius: var(--radius-md);
		border-width: var(--border-width-md);
		border-style: solid;
		background-color: var(--input-bg);
		padding: var(--input-y-md) var(--input-x-md);
		text-align: left;
		font-size: var(--font-size-md);
		line-height: var(--line-height-md);
		font-weight: var(--font-weight-normal);
		color: var(--input-fg);
		box-shadow: var(--shadow-inner);

		@mixin transition-color;
		@mixin with-disabled-input;
		@mixin with-error-input;
		@mixin with-focus-ring;
		@mixin border-dynamic var(--secondary);

		/* To avoid overlap with the chevron or clear */
		padding-right: var(--input-height-md);
	}

	.c-select__button {
		@mixin with-focus-ring-always;
	}

	/* Select container parts */
	.c-select__container {
		position: relative;
	}

	.c-select__chevron,
	.c-select__clear {
		position: absolute;
		inset-block: 0;
		right: 0;
		display: flex;
		width: var(--input-height-md);
		align-items: center;
		justify-content: center;
		border: 0;
		background-color: transparent;
		padding: 0;
		color: var(--muted);
	}

	.c-select__chevron svg,
	.c-select__clear svg {
		height: 1em;
		width: 1em;
	}

	.c-select__chevron {
		display: flex;
	}

	.c-select__clear {
		display: none;
		border-radius: var(--radius-md);
	}

	/* Show clear button only is there's something to clear (and not required) */
	.c-select__container:has(+ [role='listbox'] [aria-checked='true']):not(
			:has([aria-required]:not([aria-required='false'])),
			:has(:required)
		)
		.c-select__clear {
		display: flex;
	}

	/* Hide chevron if clear button is shown */
	.c-select__container:has(+ [role='listbox'] [aria-checked='true']):not(
			:has([aria-required]:not([aria-required='false'])),
			:has(:required)
		)
		.c-select__chevron {
		display: none;
	}

	.c-select__placeholder {
		color: var(--muted);
	}

	/* Select dropdown empty state */
	.c-select__empty_state {
		display: block;
		width: 100%;
		overflow: hidden auto;
		text-overflow: ellipsis;
		padding: var(--input-y-sm) var(--input-x-md);
		text-align: center;
		font-size: var(--font-size-sm);
		line-height: var(--line-height-sm);
		color: var(--muted);
	}

	* + .c-select__empty_state {
		display: none;
	}

	/* Select typeahead */
	.c-select__input {
		position: absolute;
		inset: 0;
		opacity: 0;

		&:focus {
			opacity: 1;
		}
	}

	.c-select__input_description {
		pointer-events: none;
	}

	.c-select__container:has(:popover-open, :focus) .c-select__input {
		opacity: 1;
	}

	.c-select__container:has(:popover-open, :focus) .c-select__input_description {
		opacity: 0;
	}

	:disabled + .c-select__input_description,
	[aria-disabled='true'] + .c-select__input_description {
		@mixin disabled-input;
	}

	/* Mobile-specific fixed positioning for input + dropdown */
	.c-select__container:has(:popover-open) .c-select__input {
		position: fixed;
		inset: var(--space-md) var(--space-md) auto var(--space-md);
		z-index: var(--z-above-backdrop);
		width: auto;
	}

	.c-select__input ~ .c-dropdown__content {
		top: calc(var(--input-height-md) + 2 * var(--space-md));
		margin-top: 0;
		margin-bottom: 0;
		max-height: calc(100vh - 3 * var(--space-md) - var(--input-height-md));
	}

	/* Undo mobile-specific positioning */
	@media (width >= $breakpoint-tablet) {
		.c-select__container:has(:popover-open) .c-select__input {
			position: absolute;
			inset: 0;
			width: 100%;
		}

		.c-select__input ~ .c-dropdown__content {
			/* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */
			top: var(--c-dropdown-top);
			/* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */
			max-height: var(--c-dropdown-max-height);
		}
	}
}
